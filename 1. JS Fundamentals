................................................Intro to Javascript..............................................

It is a high level scripting language and also it is a synchronous single threaded language.
Developed by Brendon Eiech in 1995.
Used to develop Websites, Webapps, mobile apps, backend webAPI, etc.

Static vs Dynamic Webpages
-> Static webpage content is similar for all users.
-> Dynamic webpage content is different for different users.


How browser renders an HTML document ?
-> Browser reads entire HTML document and starts parsing it.
-> Browser converts HTML tags into DOM objects.
-> Browser starts creating a DOM tree to store objects.
-> If browser finds a link or style tag, it will create a CSSOM tree. 
-> Browser calls the render engine which takes the DOM tree and paints it on UI.

..................................................................................................................
prompt()  : It takes input from user and logs inside browser console. If we cancel, it returns null.

console.log()     //Print
console.warn()    //warning message will be displayed
console.error()   //error message will be displayed

alert()   : It pops up an alert message from top of browser
................................................Node.JS Dev Environment.............................................

 Node.js is a back-end JavaScript runtime environment, runs on the V8 JavaScript Engine, and executes JavaScript code outside a web browser.
 
......................................Values, Variables, Data types.................................................

1+2+"3" = 33    //Any number before string is computed and appended to string.
"3"+2+1 = 321   //Any number after string gets appended as a single string value.
1+2-"3" = 0     //In case of - * /  every string is converted to integer implicitly and is computed.

................................................DATA TYPES..........................................................

Primitive     :  number  string  boolean BigInt symbols null  undefined 
Non-primitive :  Object
BigInt
var a = 1000n
console.log(a+2n)       //1002
console.log(typeOf a)   //BigInt

....................................Type Coercion vs Type conversion................................................

Both are used to convert one data type to another.
-> Type conversion can be both implicit or explicit conversion. It uses Built-in methods or functions.
    .parseInt()   :   Function used to convert any string into number
    Number("123") :   Constructor which converts any string into number
    
-> Type Coercion is the implicit conversion of one data type into another.
  "10" + 5 = 105        :   5 is converted into string automatically
  5 + 6 + "10" = 1110   :   5+6 after addition is converted into string internally
..................................................................................................................

AND OR NOT
&   |     : It is used to compare 2 numbers at binary level
&& || !=  : It works on expressions/values  

0 -> false 
others -> true

2 & 1 = 0 
Steps:  10 & 01 = 00 = 0

2 | 1 = 3
Steps:  10 | 01 = 11 = 3
2 != 1 = true

2 && 3 = 3
2 || 3 = 2
...........................................................................................................
Variables are containers used to store data.
var, let, const are keywords given to variables.
Default values assigned is undefined.
var   : Can be redeclared       Can be reinitialised      Can be hoisted    Undefined
let   : Cannot be redeclared    Can be reinitialised      Can be hoisted    Reference error in TDZ
const : Cannot be redeclared    Cannot be reinitialised   Can be hoisted    Reference error in TDZ
............................................................................................................
Null vs Undefined
Null : Null means an empty value or a blank value. It is assigned to user explicitly.
Undefined : It means a variable has been declared, but its value has not been assigned.

................................................Operators....................................................

Operators : It allows to perform certain operations on data. 
Arithmetic Operators :  + - * / % [** : Exponent]
Relational Operators :  < > == >= <= (Return a boolean value)

== vs ===
== is used to compare 2 values without checking its datatype. Type conversion is done before checking both data.
=== is used to compare 2 values with checking its datatype. Type conversion is strictly prohibited.

Logical Operators :  & | ! && || 
Conditional Operators/ Ternary Operators : (condition) ? True Statement : False Statement
If we are using + operator, JS will convert number to string

.....................................Conditionals.............................................................
if-else
if-else-if
switch case : 
switch(condition){
case 'a': statement1;
break;
case 1 : statement2;
break;
default : statement3;
}
............................................................................................................
